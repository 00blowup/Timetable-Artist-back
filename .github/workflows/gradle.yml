name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: samwamoney-github-actions-s3-bucket
  CODE_DEPLOY_APPLICATION_NAME: samwamoney-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: samwamoney-codedeploy-deployment-group
  APPLICATION: ${{ secrets.APPLICATION_SECRET_YML }}
  
permissions:
  contents: read
  
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - uses: actions/checkout@v2
    - run: touch ./TimeTableArtist/src/main/resources/application.yml
    - run: echo "${{env.APPLICATION}}" > ./TimeTableArtist/src/main/resources/application.yml
    - uses: actions/upload-artifact@v2
      with:
        name: application-secret.yml
        path: ./TimeTableArtist/src/main/resources/application.yml
    
    - name: init with Gradle
      uses: gradle/gradle-build-action@v2
    - run: gradle init
    
    - name: Build with Gradle1
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.2.1
        arguments: build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION }}
    - name: Upload to AWS S3
      run:
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3BUCKET_NAME/$GITHUB_SHA.zip \
          --source .
          
    - name: Deploy to AWS EC2 from S3
      run: \
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name $ {{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
